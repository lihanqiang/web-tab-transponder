{"version":3,"file":"transponder.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;ACVO,MAAMA,cAAc,CACzB,MADyB,EAEzB,OAFyB,EAGzB,SAHyB,CAApB;AAKA,MAAMC,WAAW,EAAjB;;;;;;;;;;;;;;;;ACLP;AACA;AACA;;AAEA,IAAIE,WAAW,EAAf;;AAEO,MAAMC,kBAAN,CAAyB;AAC9BC,cAAaC,UAAU,EAAEC,UAAU,IAAZ,EAAvB,EAA2C;AACzCD,YAAQE,cAAR,GAAyBC,KAAKC,MAAL,EAAzB;AACAP,eAAWG,OAAX;AACA,QAAI,CAACF,mBAAmBO,QAAxB,EAAkC;AAChC,WAAKC,UAAL;AACAR,yBAAmBO,QAAnB,GAA8B,IAA9B;AACD;AACD,WAAOP,mBAAmBO,QAA1B;AACD;;AAEDC,eAAc;AACZ;AACA,QAAIC,YAAJ,EAAkB;AAChB;AACA,WAAKC,MAAL,GAAc,IAAIZ,qEAAJ,EAAd;AACD,KAHD,MAGO;AACL,YAAM,IAAIa,KAAJ,CAAU,sDAAV,CAAN;AACD;AACD,WAAO,IAAP;AACD;;AAEDC,OAAMC,IAAN,EAAY;AACV,QAAI,KAAKH,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYI,WAAZ,CAAwB;AACtBC,yBAAiBhB,SAASK,cADJ;AAEtBS;AAFsB,OAAxB;AAID;AACD,WAAO,IAAP;AACD;;AAEDG,KAAIC,SAAJ,EAAeC,WAAW,MAAM,CAAE,CAAlC,EAAoC;AAClC,QAAI,CAACtB,2DAAA,CAAoBqB,SAApB,CAAL,EAAqC;AACnC,UAAI,KAAKP,MAAT,EAAiB;AACf,YAAIX,SAASI,QAAb,EAAuB;AACrB,eAAKO,MAAL,CAAYU,gBAAZ,CAA6BH,SAA7B,EAAwC,UAAU,GAAGI,IAAb,EAAmB;AACzD,kBAAMC,UAAU,IAAhB;AACA,kBAAMC,QAAQF,KAAK,CAAL,CAAd;AACA,gBAAIE,KAAJ,EAAW;AACT,oBAAM,EAAER,eAAF,KAAsBQ,MAAMV,IAAlC;AACA,kBAAIE,oBAAoBhB,SAASK,cAAjC,EAAiD;AAC/Cc,yBAASM,KAAT,CAAeF,OAAf,EAAwBD,IAAxB;AACD;AACF;AACF,WATD;AAUD,SAXD,MAWO;AACL,eAAKX,MAAL,CAAYU,gBAAZ,CAA6BH,SAA7B,EAAwCC,QAAxC;AACD;AACF;AACF,KAjBD,MAiBO;AACLO,cAAQC,IAAR,CAAc,cAAaT,SAAU,sCAAqCrB,mDAAY,WAAtF;AACD;AACD,WAAO,IAAP;AACD;;AAED+B,YAAW;AACT,QAAI,KAAKjB,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYkB,SAAZ;AACD;AACF;AA5D6B;;;;;;;;;;;;;;ACNjB;AACf,oBAAoB,qBAAuB;AAC3C;;;;;;;UCFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;ACfA;;AAEA,iEAAe5B,yEAAf,E","sources":["webpack://Transponder/webpack/universalModuleDefinition","webpack://Transponder/./src/libs/constants.js","webpack://Transponder/./src/libs/worker/index-worker.js","webpack://Transponder/./src/libs/worker/sharedWorker.js","webpack://Transponder/webpack/bootstrap","webpack://Transponder/webpack/runtime/define property getters","webpack://Transponder/webpack/runtime/global","webpack://Transponder/webpack/runtime/hasOwnProperty shorthand","webpack://Transponder/webpack/runtime/make namespace object","webpack://Transponder/webpack/runtime/publicPath","webpack://Transponder/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Transponder\"] = factory();\n\telse\n\t\troot[\"Transponder\"] = factory();\n})(self, function() {\nreturn ","export const EVENT_NAMES = [\r\n  'open',\r\n  'error',\r\n  'message'\r\n]\r\nexport const COMM_IDS = []\r\n","import { EVENT_NAMES } from '../constants'\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport Sharedworker from 'worker-loader!./sharedWorker.js'\r\n\r\nlet _options = {}\r\n\r\nexport class WorkerCommunicator {\r\n  constructor (options = { isolated: true }) {\r\n    options.communicatorId = Math.random()\r\n    _options = options\r\n    if (!WorkerCommunicator.instance) {\r\n      this.initWorker()\r\n      WorkerCommunicator.instance = this\r\n    }\r\n    return WorkerCommunicator.instance\r\n  }\r\n\r\n  initWorker () {\r\n    // eslint-disable-next-line no-undef\r\n    if (SharedWorker) {\r\n      // eslint-disable-next-line no-undef\r\n      this.worker = new Sharedworker()\r\n    } else {\r\n      throw new Error('\"SharedWorker\" is not supported in this environment!')\r\n    }\r\n    return this\r\n  }\r\n\r\n  send (data) {\r\n    if (this.worker) {\r\n      this.worker.postMessage({\r\n        _communicatorId: _options.communicatorId,\r\n        data\r\n      })\r\n    }\r\n    return this\r\n  }\r\n\r\n  on (eventName, callback = () => {}) {\r\n    if (~EVENT_NAMES.indexOf(eventName)) {\r\n      if (this.worker) {\r\n        if (_options.isolated) {\r\n          this.worker.addEventListener(eventName, function (...args) {\r\n            const context = this\r\n            const event = args[0]\r\n            if (event) {\r\n              const { _communicatorId } = event.data\r\n              if (_communicatorId === _options.communicatorId) {\r\n                callback.apply(context, args)\r\n              }\r\n            }\r\n          })\r\n        } else {\r\n          this.worker.addEventListener(eventName, callback)\r\n        }\r\n      }\r\n    } else {\r\n      console.warn(`eventName: ${eventName} is not available here, use one of ${EVENT_NAMES} instead.`)\r\n    }\r\n    return this\r\n  }\r\n\r\n  destory () {\r\n    if (this.worker) {\r\n      this.worker.terminate()\r\n    }\r\n  }\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"transponder.worker.js\");\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { WorkerCommunicator } from './libs/worker/index-worker'\r\n\r\nexport default WorkerCommunicator\r\n"],"names":["EVENT_NAMES","COMM_IDS","Sharedworker","_options","WorkerCommunicator","constructor","options","isolated","communicatorId","Math","random","instance","initWorker","SharedWorker","worker","Error","send","data","postMessage","_communicatorId","on","eventName","callback","indexOf","addEventListener","args","context","event","apply","console","warn","destory","terminate"],"sourceRoot":""}